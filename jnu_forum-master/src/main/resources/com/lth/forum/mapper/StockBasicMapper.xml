<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lth.forum.mapper.StockBasicMapper">
    
    <resultMap id="BaseResultMap" type="com.lth.forum.model.StockBasic">
        <id column="ts_code" property="tsCode" jdbcType="VARCHAR"/>
        <result column="symbol" property="symbol" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="industry" property="industry" jdbcType="VARCHAR"/>
        <result column="area" property="area" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        ts_code, symbol, name, industry, area, totalMarketCap, floatMarketCap
    </sql>

    <insert id="insert" parameterType="com.lth.forum.model.StockBasic">
        INSERT INTO stock_basic
        (ts_code, symbol, name, industry, area)
        VALUES
        (#{tsCode}, #{symbol}, #{name}, #{industry}, #{area})
        ON DUPLICATE KEY UPDATE
        name = VALUES(name),
        industry = VALUES(industry),
        area = VALUES(area)
    </insert>
    <sql id="tablename">stock_basic</sql>
    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO
        <include refid="tablename"/>
        (<include refid="Base_Column_List"/>)
        VALUES
            <foreach collection="list" item="item" separator=",">
                (#{item.tsCode}, #{item.symbol}, #{item.name}, #{item.industry}, #{item.area}, #{item.totalMarketCap}, #{item.floatMarketCap})
            </foreach>
        ON DUPLICATE KEY UPDATE
        name = VALUES(name),
        industry = VALUES(industry),
        area = VALUES(area),
        totalMarketCap = VALUES(totalMarketCap),
        floatMarketCap = VALUES(floatMarketCap)
    </insert>

    <delete id="deleteByTsCode" parameterType="java.lang.String">
        DELETE FROM stock_basic
        WHERE ts_code = #{tsCode}
    </delete>

    <update id="update" parameterType="com.lth.forum.model.StockBasic">
        UPDATE stock_basic
        SET
            name = #{name},
            industry = #{industry},
            area = #{area}
        WHERE ts_code = #{tsCode}
    </update>

    <select id="selectByTsCode" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM stock_basic
        WHERE ts_code = #{tsCode}
    </select>

    <select id="selectBySymbol" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM stock_basic
        WHERE symbol = #{symbol}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM stock_basic
    </select>

    <select id="selectByIndustry" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM stock_basic
        WHERE industry = #{industry}
    </select>
    <select id="getByPageSize" resultType="com.lth.forum.model.StockBasic">
        select * from stock_basic ts where 1=1

        <if test="lastName != null">
            and ts.name &lt; #{lastName}
        </if>
        <if test="name !=null">
            and ts.name =#{name}
        </if>
        order by ts.name desc limit #{pageSize}
    </select>
    <select id="count" resultType="java.lang.Long">
        select count( distinct ts.symbol) from stock_basic ts where 1=1
        <if test="name !=null">
            and ts.name =#{name}
        </if>
    </select>
</mapper>
